// https://adventofcode.com/2023/day/16

type EmptySpace = '.'
type Mirror = '/' | '\\'
type Splitter = '|' | '-'
type Cell = EmptySpace | Mirror | Splitter
type Grid = Cell[][]
type EnergyGrid = Set<Direction>[][]

const isMirror = (cell: Cell): cell is Mirror => cell === '/' || cell === '\\'
const isSplitter = (cell: Cell): cell is Splitter => cell === '|' || cell === '-'

type Position = {
  x: number
  y: number
}

type Direction = 'up' | 'down' | 'left' | 'right'

const directionSymbols: Record<Direction, string> = {
  up: '^',
  down: 'v',
  left: '<',
  right: '>',
}

const directionShifts: Record<Direction, Position> = {
  up: { x: 0, y: -1 },
  down: { x: 0, y: 1 },
  left: { x: -1, y: 0 },
  right: { x: 1, y: 0 },
}

type Beam = {
  position: Position
  direction: Direction
  isFinished?: boolean
}

export const parseGrid = (input: string) => input.split('\n').map((row) => row.split('') as Cell[])

const defaultBeam: Beam = { position: { x: 0, y: 0 }, direction: 'right' }
export const getEnergyGrid = (grid: Grid, beam: Beam = defaultBeam, stepByStep?: boolean) => {
  const beams: Beam[] = [beam]
  const energyGrid: EnergyGrid = grid.map((row) => row.map(() => new Set<Direction>()))

  while (true) {
    let didMove = false
    let runs = 0

    const newBeams: Beam[] = []

    for (const beam of beams) {
      runs++
      if (beam.isFinished) continue
      const { x, y } = beam.position

      const isOutOfBounds = x < 0 || x >= grid[0].length || y < 0 || y >= grid.length
      if (isOutOfBounds) {
        beam.isFinished = true
        continue
      }

      const isOnEnergizedCell = energyGrid[y][x].has(beam.direction)
      if (isOnEnergizedCell) {
        beam.isFinished = true
        continue
      }
      energyGrid[y][x].add(beam.direction)

      const cell = grid[y][x]
      let newBeam: Beam | undefined
      if (isMirror(cell)) {
        const { direction } = beam
        if (cell === '/') {
          beam.direction =
            direction === 'up' ? 'right' : direction === 'down' ? 'left' : direction === 'left' ? 'down' : 'up'
        } else {
          beam.direction =
            direction === 'up' ? 'left' : direction === 'down' ? 'right' : direction === 'left' ? 'up' : 'down'
        }
      } else if (isSplitter(cell)) {
        const isDirectionVertical = beam.direction === 'up' || beam.direction === 'down'
        if (cell === '|' && !isDirectionVertical) {
          beam.direction = 'up'
          newBeam = { position: { ...beam.position }, direction: 'down' }
        } else if (cell === '-' && isDirectionVertical) {
          beam.direction = 'left'
          newBeam = { position: { ...beam.position }, direction: 'right' }
        }
      }

      beam.position = {
        x: beam.position.x + directionShifts[beam.direction].x,
        y: beam.position.y + directionShifts[beam.direction].y,
      }
      didMove = true
      if (newBeam) {
        newBeam.position = {
          x: newBeam.position.x + directionShifts[newBeam.direction].x,
          y: newBeam.position.y + directionShifts[newBeam.direction].y,
        }
        newBeams.push(newBeam)
      }
    }
    if (!didMove) break
    beams.push(...newBeams)
    if (stepByStep) {
      console.clear()
      console.log(energyGridToStr(energyGrid))
      console.log(JSON.stringify(beams))
      prompt('Press Enter to continue')
    }
  }

  return energyGrid
}

export const energyGridToStr = (energyGrid: EnergyGrid, grid?: Grid) =>
  energyGrid
    .map((row, y) =>
      row
        .map((cellEnergySet, x) => {
          if (!grid) return cellEnergySet.size ? '#' : '.'

          const cell = grid[y][x]
          if (cell !== '.') return cell

          if (cellEnergySet.size > 1) return cellEnergySet.size
          if (!cellEnergySet.size) return '.'
          const [direction] = cellEnergySet
          return directionSymbols[direction]
        })
        .join(''),
    )
    .join('\n')

export const getEnergizedCellNum = (grid: EnergyGrid) =>
  grid.reduce((acc, row) => acc + row.filter((directionSet) => directionSet.size).length, 0)

export const getMostEnergizedBeam = (grid: Grid): { beam: Beam; energizedCellNum: number } => {
  let maxEnergizedCellNum = 0
  let mostEnergizedBeam: Beam | undefined

  const directions: Direction[] = ['up', 'down', 'left', 'right']

  for (const direction of directions) {
    const isVertical = direction === 'up' || direction === 'down'
    for (let value = 0; value < (isVertical ? grid.length : grid[0].length); value++) {
      const x = direction === 'left' ? grid[0].length - 1 : direction === 'right' ? 0 : value
      const y = direction === 'up' ? grid.length - 1 : direction === 'down' ? 0 : value

      const beam: Beam = { position: { x, y }, direction }
      const energyGrid = getEnergyGrid(grid, beam)
      const energizedCellNum = getEnergizedCellNum(energyGrid)
      if (energizedCellNum > maxEnergizedCellNum) {
        maxEnergizedCellNum = energizedCellNum
        mostEnergizedBeam = { position: { x, y }, direction }
      }
    }
  }

  return {
    beam: mostEnergizedBeam!,
    energizedCellNum: maxEnergizedCellNum,
  }
}

if (Bun.env.NODE_ENV !== 'test') {
  const input = `\\....|...-...../.....|....................-./............|/.....................-........./.....-.............\n\\..........-.....................-......................................|....................\\..../.....-.....\n....\\......-...../../../...\\......................\\.........................-.............|.............|.....\n.........../..../...........|/\\.............\\........\\.......|.........|..|../............/.........|.........\n\\./...\\........\\..........\\......./....../...............................|....|........|................/.....\n|-.....|............/...............|...\\...|...../......../.....|............|..\\..|..../.......-.........\\..\n........-.............||../..........|.........../..................../.|.....|\\..-/......./...\\...\\....-.....\n....................//........................./..........\\.......|...|.........../......\\-......-...\\........\n....../..........\\......\\.....................\\................\\......\\..\\..|.................................\n.................\\...............-....../........./....-./..........|..../..-..|../................\\..........\n.............-...............-......|.../.....-.....//.\\................../..........-......-...........-.....\n.........../.\\.....................\\............-..........|.......\\..................\\.......................\n...............\\............/.|...\\........../....\\.............|...........\\...............|.../........\\....\n./..............\\................-\\.../\\.......-....................-..............-|.............\\.-.........\n../....../.........|..../......\\...\\.\\.................|......./.......|...............-.........-............\n-...-............................\\.............-.\\........-.....|.........././-......|......-..../...|........\n................-.....................|..|...\\.././.............|..........................-.............-....\n.......|...............................|.......................................-......../.............|-...-..\n.\\|............................\\................|.....-.....-................................./...-..\\...../..\n.......\\......-....\\|......|........................................./...||...............\\...................\n.................../......../.......-......\\..............|..\\...........-.........-.............../..........\n........................\\......................../.................-........................\\.....\\...........\n..........|......|........................|.|\\...............\\...|.............-...-....-............--.......\n............|........../....\\..........\\........../..-..|...........-...\\........................./..-........\n.............||../..../.......................-/.......\\.....\\............./|..-...............|.....|........\n................................|..\\.........-......./...........-../-............\\................\\....-../..\n.............-.............................|.\\...............................\\\\...............................\n..|.......-................................\\.......|.......\\.....................|../\\..........\\..........-..\n......-..\\..........-.................\\.-..../\\......./......./..-.......................\\.....-........\\.....\n............................../.....................\\.................\\................|..../\\.............\\..\n..............................-.......\\.........-..........\\....../............./.....-........\\...-.........|\n/..................\\...||..|...........\\...............-............\\..........|./.....-.-./.............../..\n.....|......./...............\\.......-................-...........................................\\...........\n.|.................../.....\\............./.....\\.................-.../.......-..............\\..-..............\n......\\........|...|...........//..........|\\.\\..............................-..../...-............|..........\n|......\\....|\\......|........../.........../........-.........|.-\\//................/..\\....|.../........|....\n.-....-......................./.........\\.........-.../............................-..|........|.....|...|....\n.........-..................-..........-....-....................-....-./.......................|.../......\\..\n..-../......................-\\.....|...\\........./.-...............-.................../../............|......\n.-/.......-../.......-...|\\...../..........-...\\.......\\.........-....\\-................-......|........-.....\n.............................\\\\\\............-..............|........../...................-......../....../../\n.....-....\\....\\......................-..\\...............-..|...............-................-.......\\......|.\n..-...\\.............................../.../.............................--.......-..|.|\\...../...............\\\n......\\.../...-.....|....|......\\.../|...................................-................-................./.\n.......-......-.../..................|../..................\\..........................\\-..........-\\..........\n.-.......\\.........|....|\\/./-\\.-.....|..................-...................................-|...\\...........\n...........-........../\\..................\\./..........................\\...../...........-...\\...../..\\....-..\n..-.|...../|......\\..\\........|.............-.....|..........\\...-...-../......................../.......|....\n......../................/..\\.......\\..-...|.....\\.......|\\..........................-..\\../..........\\./.....\n........\\.-......|......|..........|........-...................-..\\.....-./..............-.\\......\\..........\n........|./..................\\........|......................\\............................./.-\\....\\........-.\n........\\.|......\\................/..\\....-/.\\.....-.....|............................\\..\\.|............|...-.\n...-.....-|..................|...............-./.....................\\..\\............|.....-..................\n..........|\\./.....\\..................|.........|.....................-\\./..\\........\\........................\n../........\\..............|....-...............................................|..........-......../..........\n..\\..............|...../../....................-....\\.....................|........\\...\\\\.....................\n...........................-...\\......\\......./../..........\\-...../.......................-...........\\......\n-.|........................../.....|...............\\..........-.............\\...-................-.......-....\n/../.........\\........./......-.../..-..................-.......................\\............--...............\n\\...............|......-..../......................................-........./|......................\\|....../\n.....\\.......................................-...................-.../...........\\.......|../.............|...\n....-....||......\\..\\.......-.........-......../..../............\\..................................-.........\n...-..|.......\\..\\..|..........-../-..........\\............../...............|..../........./....../.......|./\n.......................\\.......././.............\\..................-..........|................../....|.......\n-.|.....................\\\\.........../......./.|................/................|./......./....-.............\n......-...............-....-................|./\\..\\-/...../......../....-....\\....|.-.................../...\\.\n...............\\......-...\\...\\....-....-/....................\\./....../..................-|........\\./...../.\n.\\......................./..\\.........\\.........|............|.......-../..\\.-..|.-..........................|\n..|../.....................|/......................./......../.../.........-.../.|./.|.-..............|....-..\n...-.-/............/............|..........|....../\\...\\./.....|..................|....\\............/.........\n.....|........./.........\\.............../......./../../...................|.......//.......\\..\\..........\\...\n......./.............\\...........\\.\\..............................................\\...................|.......\n...............-|...../..-............................\\.....-.............../\\.........-....................\\.\n.........-.....................-...\\...................-..../.................||....\\.........-.......-..-....\n.|../..\\...\\......|..\\./.........\\..............|..\\/......../...............-..-....................-.....\\..\n..................|........\\.-.....|.......\\............../................................/...-....|...../...\n...........-......./........-...--........\\.../..-...../.|............|......./...............|....../\\......\\\n.../.....\\...................-..../....................................-......................|.............-.\n.\\.....|....-.....|.....-...................................................|../....\\..................\\.....-\n....-........../\\......../.......-....\\............................./-.............-..........................\n....\\.........-........./......../....|..............\\........\\../.................\\.|...............\\........\n.........-..............|./............-.......................\\.......\\......-\\......\\......../..............\n-.|...|./-..........\\..........-...-............|...-......................\\..\\.............................-.\n............/......................../.........................................\\/..........|.....|.-........|/\n....../..|./..././.....-......................../....|................../..|........-.....................|./.\n.......................\\....................../......./......\\/........\\......./....../\\|.....\\...............\n\\...........\\/.|../..................../...............\\\\...\\..../..................\\......./.................\n.../................/...............\\./....-./........../........./\\..-.................................\\.....\n........-.......-...........\\........-.......\\............|............|.....-........|..|..../...............\n.............|...|............/....\\............................................-..\\......./.../..........\\...\n...................../-..|...........-................../.\\...|.....\\.....|/.................|................\n..|................\\.....-...........|.\\............-.........|....../...................\\......-.|.......\\...\n........\\......../.....-...\\..\\...........\\........|/.............../......|.......|.\\..|........|............\n..........\\.....................-..|/.....\\............-............../.......................|./........\\....\n.......\\........|...........\\......\\.......-..-.....|............./......|\\..............................|....\n.........\\.......................-............-/.................................\\............|...............\n.........\\................/.............................../..........\\................-../../......|......-...\n....\\...-./...............\\...............|.....\\|....|/...............-...........................-..........\n.|.......\\.......-............./.......\\............./....................|......|../......-...........\\......\n.....\\.....-.....\\...\\................/......\\...\\../.\\...\\....\\-....-././...............................|./..\n.....................-.\\.\\.........../......./...-......./-.........................\\.......|../....\\..|..../.\n|..\\......./-......-...../..-....../.................../..-.....................-..../...........\\...../......\n......................................./................|....\\/....\\............/....../......................\n......................../..........|........-............|.........................|.\\................|....../\n-.............-...|...........-....-..-.|\\.......|......\\..........-......|-...-......\\.......................\n...........\\.\\\\.../.................\\..........\\..-......-......|.-............................-.||...|....../\n....|................--........|.|..........|......\\.............................................-............\n.-..|................/../..-.........................../...../.....\\.../....-.....\\-..................../.....\n............./|..........................\\...................................-..-..........|....\\..|..........\n....|...../........./.-....-..................../.........../....................-................\\./.........`
  const grid = parseGrid(input)
  const energyGrid = getEnergyGrid(grid)
  const energizedCellNum = getEnergizedCellNum(energyGrid)
  console.log('Part 1 result:', energizedCellNum)
  console.log('Part 2 result:', getMostEnergizedBeam(grid).energizedCellNum)
}
